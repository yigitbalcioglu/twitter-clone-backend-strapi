{"version":3,"file":"index-vh55wXJ0.mjs","sources":["../../admin/src/pages/PluginPage/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  Box,\n  LinkButton,\n  ContentLayout,\n  Flex,\n  HeaderLayout,\n  IconButton,\n  Layout,\n  Main,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  Typography,\n} from '@strapi/design-system';\nimport {\n  AnErrorOccurred,\n  ConfirmDialog,\n  EmptyStateLayout,\n  LoadingIndicatorPage,\n  useFocusWhenNavigate,\n  useRBAC,\n} from '@strapi/helper-plugin';\nimport { Eye as Show, Refresh as Reload, Trash } from '@strapi/icons';\nimport { Helmet } from 'react-helmet';\nimport { useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { PERMISSIONS } from '../../constants';\nimport { useDocumentation } from '../../hooks/useDocumentation';\nimport { getTrad } from '../../utils';\n\nconst PluginPage = () => {\n  useFocusWhenNavigate();\n  const { formatMessage } = useIntl();\n  const { data, isLoading, isError, remove, regenerate } = useDocumentation();\n  const [showConfirmDelete, setShowConfirmDelete] = useState(false);\n  const [isConfirmButtonLoading, setIsConfirmButtonLoading] = useState(false);\n  const [versionToDelete, setVersionToDelete] = useState();\n  const { allowedActions } = useRBAC(PERMISSIONS);\n\n  const colCount = 4;\n  const rowCount = (data?.docVersions?.length || 0) + 1;\n\n  const handleRegenerateDoc = (version) => {\n    regenerate.mutate({ version, prefix: data?.prefix });\n  };\n\n  const handleShowConfirmDelete = () => {\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const handleConfirmDelete = async () => {\n    setIsConfirmButtonLoading(true);\n    await remove.mutateAsync({ prefix: data?.prefix, version: versionToDelete });\n    setShowConfirmDelete(!showConfirmDelete);\n    setIsConfirmButtonLoading(false);\n  };\n\n  const handleClickDelete = (version) => {\n    setVersionToDelete(version);\n    setShowConfirmDelete(!showConfirmDelete);\n  };\n\n  const title = formatMessage({\n    id: getTrad('plugin.name'),\n    defaultMessage: 'Documentation',\n  });\n\n  if (isError) {\n    return (\n      <Layout>\n        <ContentLayout>\n          <Box paddingTop={8}>\n            <AnErrorOccurred />\n          </Box>\n        </ContentLayout>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <Helmet title={title} />\n      <Main aria-busy={isLoading}>\n        <HeaderLayout\n          title={title}\n          subtitle={formatMessage({\n            id: getTrad('pages.PluginPage.header.description'),\n            defaultMessage: 'Configure the documentation plugin',\n          })}\n          primaryAction={\n            <OpenDocLink\n              disabled={!allowedActions.canOpen || !data?.currentVersion || !data?.prefix}\n              href={createDocumentationHref(`${data?.prefix}/v${data?.currentVersion}`)}\n              startIcon={<Show />}\n            >\n              {formatMessage({\n                id: getTrad('pages.PluginPage.Button.open'),\n                defaultMessage: 'Open Documentation',\n              })}\n            </OpenDocLink>\n          }\n        />\n        <ContentLayout>\n          {isLoading && <LoadingIndicatorPage>Plugin is loading</LoadingIndicatorPage>}\n          {data?.docVersions.length ? (\n            <Table colCount={colCount} rowCount={rowCount}>\n              <Thead>\n                <Tr>\n                  <Th>\n                    <Typography variant=\"sigma\" textColor=\"neutral600\">\n                      {formatMessage({\n                        id: getTrad('pages.PluginPage.table.version'),\n                        defaultMessage: 'Version',\n                      })}\n                    </Typography>\n                  </Th>\n                  <Th>\n                    <Typography variant=\"sigma\" textColor=\"neutral600\">\n                      {formatMessage({\n                        id: getTrad('pages.PluginPage.table.generated'),\n                        defaultMessage: 'Last Generated',\n                      })}\n                    </Typography>\n                  </Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {data.docVersions\n                  .sort((a, b) => (a.generatedDate < b.generatedDate ? 1 : -1))\n                  .map((doc) => (\n                    <Tr key={doc.version}>\n                      <Td width=\"50%\">\n                        <Typography>{doc.version}</Typography>\n                      </Td>\n                      <Td width=\"50%\">\n                        <Typography>{doc.generatedDate}</Typography>\n                      </Td>\n                      <Td>\n                        <Flex justifyContent=\"end\" onClick={(e) => e.stopPropagation()}>\n                          <IconButton\n                            forwardedAs=\"a\"\n                            disabled={!allowedActions.canOpen}\n                            href={createDocumentationHref(`${data.prefix}/v${doc.version}`)}\n                            noBorder\n                            icon={<Show />}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            label={formatMessage(\n                              {\n                                id: getTrad('pages.PluginPage.table.icon.show'),\n                                defaultMessage: 'Open {target}',\n                              },\n                              { target: `${doc.version}` }\n                            )}\n                          />\n                          {allowedActions.canRegenerate ? (\n                            <IconButton\n                              onClick={() => handleRegenerateDoc(doc.version)}\n                              noBorder\n                              icon={<Reload />}\n                              label={formatMessage(\n                                {\n                                  id: getTrad('pages.PluginPage.table.icon.regenerate'),\n                                  defaultMessage: 'Regenerate {target}',\n                                },\n                                { target: `${doc.version}` }\n                              )}\n                            />\n                          ) : null}\n                          {allowedActions.canUpdate && doc.version !== data.currentVersion ? (\n                            <IconButton\n                              onClick={() => handleClickDelete(doc.version)}\n                              noBorder\n                              icon={<Trash />}\n                              label={formatMessage(\n                                {\n                                  id: 'global.delete-target',\n                                  defaultMessage: 'Delete {target}',\n                                },\n                                { target: `${doc.version}` }\n                              )}\n                            />\n                          ) : null}\n                        </Flex>\n                      </Td>\n                    </Tr>\n                  ))}\n              </Tbody>\n            </Table>\n          ) : (\n            <EmptyStateLayout />\n          )}\n        </ContentLayout>\n        <ConfirmDialog\n          isConfirmButtonLoading={isConfirmButtonLoading}\n          onConfirm={handleConfirmDelete}\n          onToggleDialog={handleShowConfirmDelete}\n          isOpen={showConfirmDelete}\n        />\n      </Main>\n    </Layout>\n  );\n};\n\n/**\n * TODO: should this be fixed in the DS?\n */\nconst OpenDocLink = styled(LinkButton)`\n  text-decoration: none;\n`;\n\nconst createDocumentationHref = (path) => {\n  if (path.startsWith('http')) {\n    return path;\n  }\n\n  if (path.startsWith('/')) {\n    return `${window.strapi.backendURL}${path}`;\n  }\n\n  return `${window.strapi.backendURL}/${path}`;\n};\n\nexport default PluginPage;\n"],"names":["Show","Reload"],"mappings":"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"}